var Circle = function (id, width, height, radius, percent, hue) {
    var c = document.getElementById(id);
    var ctx = c.getContext("2d");
    ctx.clearRect(0,0,width,height);
    clearInterval($(c).attr('intervalid'));
    var cw = c.width = width;
    var ch = c.height = height;
    var _circle = {
        x: (cw / 2),
        y: (ch / 2),
        radius: radius,
        speed: 4,
        rotation: 0,
        angleStart: 0,
        angleEnd: 360 - 360*(percent/100),
        hue: hue,
        thickness:4,//尾部
        blur: 10
    };
    var particles = [];
    var particleMax = 100;
    var rand = function (a, b) {
        return ~~((Math.random() * (b - a + 1)) + a);
    };
    var dToR = function (degrees) {
        return degrees * (Math.PI / 180);
    };

    var updateCircle = function () {
        if (_circle.rotation < 360) {
            _circle.rotation += _circle.speed;
        } else {
            _circle.rotation = 0;
        }
    };
    var renderCircle = function () {
        ctx.save();
        ctx.translate(_circle.x, _circle.y);
        ctx.rotate(dToR(_circle.rotation));
        ctx.beginPath();
        ctx.arc(0, 0, _circle.radius, dToR(_circle.angleStart), dToR(_circle.angleEnd), true);
        ctx.lineWidth = _circle.thickness;
        ctx.strokeStyle = gradient1;
        ctx.stroke();
        ctx.restore();
    };
    var renderCircleBorder = function () {
        ctx.save();
        ctx.translate(_circle.x, _circle.y);
        ctx.rotate(dToR(_circle.rotation));
        ctx.beginPath();
        ctx.arc(0, 0, _circle.radius + (_circle.thickness / 2), dToR(_circle.angleStart), dToR(_circle.angleEnd), true);
        ctx.lineWidth = 1;
        ctx.strokeStyle = gradient2;
        ctx.stroke();
        ctx.restore();
    };
    var renderCircleFlare = function () {
        ctx.save();
        ctx.translate(_circle.x, _circle.y);
        ctx.rotate(dToR(_circle.rotation + 280));
        ctx.scale(1, 1);
        ctx.beginPath();
        ctx.arc(0, _circle.radius, 5, 0, Math.PI * 2, false);
        ctx.closePath();
        var gradient3 = ctx.createRadialGradient(0, _circle.radius, 0, 0, _circle.radius, 30);
        gradient3.addColorStop(0, 'hsla('+hue+', 40%, 30%, .35)');
        gradient3.addColorStop(1, 'hsla('+hue+', 40%, 30%, 0)');
        ctx.fillStyle = gradient3;
        ctx.fill();
        ctx.restore();
    };

    //头部
    var renderCircleFlare2 = function () {
        ctx.save();
        ctx.translate(_circle.x, _circle.y);
        ctx.rotate(dToR(_circle.rotation + 275));
        ctx.scale(1.5, 1);
        ctx.beginPath();
        ctx.arc(0, _circle.radius, 5, 0, Math.PI * 2, false);
        ctx.closePath();
        var gradient4 = ctx.createRadialGradient(0, _circle.radius, 0, 0, _circle.radius, 25);
        gradient4.addColorStop(0, 'hsla('+hue+', 80%, 50%, .2)');
        gradient4.addColorStop(1, 'hsla('+hue+', 80%, 50%, 0)');
        ctx.fillStyle = gradient4;
        ctx.fill();
        ctx.restore();
    };
    var createParticles = function () {
        if (particles.length < particleMax) {
            particles.push({
                x: (_circle.x + _circle.radius * Math.cos(dToR(_circle.rotation - 0))) + (rand(0, _circle.thickness * 2) - _circle.thickness),
                y: (_circle.y + _circle.radius * Math.sin(dToR(_circle.rotation - 0))) + (rand(0, _circle.thickness * 2) - _circle.thickness),
                vx: (rand(0, 100) - 50) / 1000,
                vy: (rand(0, 100) - 50) / 1000,
                radius: rand(1, 6) / 2,
                alpha: rand(10, 20) / 100
            });
        }
    };
    var updateParticles = function () {
        var i = particles.length;
        while (i--) {
            var p = particles[i];
            p.vx += (rand(0, 100) - 50) / 750;
            p.vy += (rand(0, 100) - 50) / 750;
            p.x += p.vx;
            p.y += p.vy;
            p.alpha -= .01;

            if (p.alpha < .02) {
                particles.splice(i, 1)
            }
        }
    };
    var renderParticles = function () {
        var i = particles.length;
        while (i--) {
            var p = particles[i];
            ctx.beginPath();
            ctx.fillRect(p.x, p.y, p.radius, p.radius);
            ctx.closePath();
            ctx.fillStyle = 'hsla(0, 0%, 100%, ' + p.alpha + ')';
        }
    };
    var clear = function () {
        ctx.globalCompositeOperation = 'destination-out';
        ctx.fillStyle = 'rgba(0, 0, 0, .1)';
        ctx.fillRect(0, 0, cw, ch);
        ctx.globalCompositeOperation = 'lighter';
    };
    var loop = function () {
        clear();
        updateCircle();
        renderCircle();
        renderCircleBorder();
        renderCircleFlare();
        renderCircleFlare2();
        createParticles();
        updateParticles();
        renderParticles();
    };
    ctx.shadowBlur = _circle.blur;
    ctx.shadowColor = 'hsla(' + _circle.hue + ', 80%, 60%, 1)';
    ctx.lineCap = 'round';

    var gradient1 = ctx.createLinearGradient(0, -_circle.radius, 0, _circle.radius);
    gradient1.addColorStop(0, 'hsla(' + _circle.hue + ', 60%, 50%, .25)');
    gradient1.addColorStop(1, 'hsla(' + _circle.hue + ', 60%, 50%, 0)');

    var gradient2 = ctx.createLinearGradient(0, -_circle.radius, 0, _circle.radius);
    gradient2.addColorStop(0, 'hsla(' + _circle.hue + ', 100%, 50%, 0)');
    gradient2.addColorStop(.1, 'hsla(' + _circle.hue + ', 100%, 100%, .7)');
    gradient2.addColorStop(1, 'hsla(' + _circle.hue + ', 100%, 50%, 0)');

    var setid = setInterval(loop, 1000/25);
    $(c).attr('intervalid', setid);
    return setid;
};

